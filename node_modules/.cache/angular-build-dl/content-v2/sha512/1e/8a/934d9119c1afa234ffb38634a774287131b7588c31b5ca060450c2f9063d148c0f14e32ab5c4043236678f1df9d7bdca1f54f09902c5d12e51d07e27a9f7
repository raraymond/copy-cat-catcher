{"version":3,"sources":["webpack:///src/app/upload/components/file-list/file-list.component.ts","webpack:///src/app/upload/components/file-list/file-list.component.html","webpack:///src/app/upload/components/upload-task/upload-task.component.html","webpack:///src/app/upload/components/upload-task/upload-task.component.ts","webpack:///src/app/upload/components/uploader/uploader.component.ts","webpack:///src/app/upload/components/uploader/uploader.component.html","webpack:///src/app/upload/directives/dropzone.directive.ts","webpack:///src/app/upload/services/upload.service.ts","webpack:///src/app/upload/upload-routing.module.ts","webpack:///src/app/upload/upload.module.ts"],"names":["FileListComponent","fileService","sub","getUserFiles","subscribe","files","console","log","selector","templateUrl","styleUrls","task","UploadTaskComponent","storage","db","afAuth","startUpload","path","Date","now","file","name","ref","upload","percentage","percentageChanges","snapshot","snapshotChanges","pipe","currentUser","user","getDownloadURL","toPromise","downloadURL","collection","add","uid","state","bytesTransferred","totalBytes","UploaderComponent","event","isHovering","i","length","push","item","toggleHover","onDrop","DropzoneDirective","dropped","hovered","$event","preventDefault","emit","dataTransfer","UploadService","fileId","doc","authState","where","valueChanges","idField","providedIn","routes","component","UploadRoutingModule","forChild","imports","exports","UploadModule","declarations"],"mappings":"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","file":"upload-upload-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport {File} from '../../upload.model'\nimport {UploadService} from '../../services/upload.service'\n\n@Component({\n  selector: 'app-file-list',\n  templateUrl: './file-list.component.html',\n  styleUrls: ['./file-list.component.css']\n})\nexport class FileListComponent implements OnInit {\n  files: File[];\n  sub: Subscription\n\n  constructor(public fileService: UploadService) { }\n\n  ngOnInit(){\n    this.sub = this.fileService.getUserFiles().subscribe(files => (this.files = files))\n    console.log(this.files)\n  }\n\n\n}\n","<!-- <h1>Current Files</h1>\n<div *ngFor=\"let file of files\">\n    <img [src]=\"file.downloadURL\" style='width: 100px'>\n    <br>\n</div>\n<uploader></uploader> -->\n<h2>Current Files</h2>\n<div class=\"file-container\">\n    <mat-card *ngFor=\"let file of files\" class=\"example-card\">\n        <mat-card-header>\n            <!-- <div mat-card-avatar class=\"example-header-image\"></div> -->\n            <mat-card-title>{{ file.path }}</mat-card-title>\n            <mat-card-subtitle>uploaded image</mat-card-subtitle>\n        </mat-card-header>\n        <img mat-card-image [src]=\"file.downloadURL\" alt=\"Photo of a Shiba Inu\" />\n        <mat-card-content>\n            <p>\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Tenetur molestias natus odit commodi, laboriosam similique neque atque odio inventore distinctio minima, quaerat harum nesciunt? Sapiente velit voluptate assumenda voluptates magnam unde consectetur,\n                fugit id ab? Officiis libero odit in! In totam, accusantium doloremque neque ipsam officia ipsa commodi? Eius, quis.\n            </p>\n        </mat-card-content>\n        <mat-card-actions>\n            <button mat-button color=\"primary\">\n        <a [href]=\"file.downloadURL\" target=\"_blank\" rel=\"noopener\"\n          >Download Me!</a\n        >\n      </button>\n            <button mat-button>SHARE</button>\n            <button mat-button color=\"warn\">Find Matches</button>\n        </mat-card-actions>\n    </mat-card>\n</div>\n\n<div class=\"file-container\">\n    <h2>Upload</h2>\n    <uploader></uploader>\n</div>","<div *ngIf=\"percentage | async as pct\">\n    <progress [value]=\"pct\" max=\"100\"></progress> {{ pct | number }}%\n</div>\n\n\n\n<div *ngIf=\"snapshot | async as snap\">\n\n    {{ snap.bytesTransferred }} of {{ snap.totalBytes }}\n\n    <div *ngIf=\"downloadURL as url\">\n        <h3>Results!</h3>\n        <img [src]=\"url\" style='width: 100px'><br>\n        <a [href]=\"url\" target=\"_blank\" rel=\"noopener\">Download Me!</a>\n    </div>\n\n    <button (click)=\"task.pause()\" [disabled]=\"!isActive(snap)\">Pause</button>\n    <button (click)=\"task.cancel()\" [disabled]=\"!isActive(snap)\">Cancel</button>\n    <button (click)=\"task.resume()\" [disabled]=\"!(snap?.state === 'paused')\">Resume</button>\n</div>","import { Component, OnInit, Input, ChangeDetectorRef } from '@angular/core';\nimport {\n  AngularFireStorage,\n  AngularFireUploadTask,\n} from '@angular/fire/storage';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { finalize, tap } from 'rxjs/operators';\n// import { AuthService } from 'src/app/user/services/auth.service';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\n@Component({\n  selector: 'upload-task',\n  templateUrl: './upload-task.component.html',\n  styleUrls: ['./upload-task.component.scss'],\n})\nexport class UploadTaskComponent implements OnInit {\n  @Input() file: File;\n\n  task: AngularFireUploadTask;\n\n  percentage: Observable<number>;\n  snapshot: Observable<any>;\n  downloadURL: string;\n\n  constructor(\n    private storage: AngularFireStorage,\n    private db: AngularFirestore,\n    private afAuth: AngularFireAuth\n  ) {}\n\n  ngOnInit() {\n    this.startUpload();\n  }\n\n  startUpload() {\n    // The storage path\n    const path = `test/${Date.now()}_${this.file.name}`;\n\n    // Reference to storage bucket\n    const ref = this.storage.ref(path);\n\n    // The main task\n    this.task = this.storage.upload(path, this.file);\n\n    // Progress monitoring\n    this.percentage = this.task.percentageChanges();\n    //add a file document to firebase\n    this.snapshot = this.task.snapshotChanges().pipe(\n      tap(console.log),\n      // The file's download URL\n      finalize(async () => {\n        const user = await this.afAuth.currentUser;\n        this.downloadURL = await ref.getDownloadURL().toPromise();\n        this.db\n          .collection('files')\n          .add({ uid: user.uid, downloadURL: this.downloadURL, path });\n      })\n    );\n  }\n\n  isActive(snapshot) {\n    return (\n      snapshot.state === 'running' &&\n      snapshot.bytesTransferred < snapshot.totalBytes\n    );\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'uploader',\n  templateUrl: './uploader.component.html',\n  styleUrls: ['./uploader.component.css']\n})\nexport class UploaderComponent {\n\n  isHovering: boolean;\n\n  files: File[] = [];\n\n  toggleHover(event: boolean) {\n    this.isHovering = event;\n  }\n\n  onDrop(files: FileList) {\n    for (let i = 0; i < files.length; i++) {\n      this.files.push(files.item(i));\n    }\n  }\n}\n","<div class=\"dropzone\" dropzone (hovered)=\"toggleHover($event)\" (dropped)=\"onDrop($event)\" [class.hovering]=\"isHovering\">\n\n\n    <h3>AngularFire Drop Zone</h3>\n    <p>Drag and Drop a File</p>\n</div>\n\n<h3>Uploads</h3>\n\n<div *ngFor=\"let file of files\">\n    <upload-task [file]=\"file\"></upload-task>\n</div>","import { Directive, HostListener, Output, EventEmitter } from '@angular/core';\n\n@Directive({\n  selector: '[dropzone]'\n})\nexport class DropzoneDirective {\n\n  @Output() dropped =  new EventEmitter<FileList>();\n  @Output() hovered =  new EventEmitter<boolean>();\n\n  @HostListener('drop', ['$event'])\n  onDrop($event) {\n    $event.preventDefault();\n    this.dropped.emit($event.dataTransfer.files);\n    this.hovered.emit(false);\n  }\n\n  @HostListener('dragover', ['$event'])\n  onDragOver($event) {\n    $event.preventDefault();\n    this.hovered.emit(true);\n  }\n\n  @HostListener('dragleave', ['$event'])\n  onDragLeave($event) {\n    $event.preventDefault();\n    this.hovered.emit(false);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport * as firebase from 'firebase/app';\nimport { switchMap, map } from 'rxjs/operators';\nimport {File} from '../upload.model'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n\n  constructor(private afAuth: AngularFireAuth, private db: AngularFirestore) { }\n\n  // //create new file document for current user\n  // async createFile(data: File){\n  //   const user = await this.afAuth.currentUser;\n  //   return this.db.collection('files').add( {...data,\n  //     uid: user.uid,\n  //     downloadURL: this.downloadURL,\n  //     );\n  // }\n\n  //delete board\n  deleteFile(fileId: string){\n    return this.db \n      .collection('files')\n      .doc(fileId)\n      .delete();\n  }\n\n  getUserFiles() {\n    return this.afAuth.authState.pipe(\n      switchMap(user => {\n        if (user) {\n          return this.db\n            .collection<File>('files', ref =>\n              ref.where('uid', '==', user.uid)\n            )\n            .valueChanges({ idField: 'id' });\n        } else {\n          return [];\n        }\n      })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UploaderComponent } from './components/uploader/uploader.component';\nimport { FileListComponent } from './components/file-list/file-list.component';\n\n\nconst routes: Routes = [{path: '', component: FileListComponent}];\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UploadRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UploadRoutingModule } from './upload-routing.module';\nimport { DropzoneDirective } from './directives/dropzone.directive';\nimport { UploaderComponent } from './components/uploader/uploader.component';\nimport { UploadTaskComponent } from './components/upload-task/upload-task.component';\nimport { FileListComponent } from './components/file-list/file-list.component';\nimport { MaterialModule } from '../material/material.module';\n\n\n@NgModule({\n  declarations: [DropzoneDirective, UploaderComponent, UploadTaskComponent, FileListComponent],\n  imports: [\n    CommonModule,\n    UploadRoutingModule,\n    MaterialModule\n  ]\n})\nexport class UploadModule { }\n"]}