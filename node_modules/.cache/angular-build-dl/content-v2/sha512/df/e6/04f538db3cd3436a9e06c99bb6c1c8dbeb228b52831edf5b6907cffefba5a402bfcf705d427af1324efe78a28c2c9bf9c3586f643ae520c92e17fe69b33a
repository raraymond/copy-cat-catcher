{"version":3,"sources":["./src/app/user/email-login/email-login.component.ts","./src/app/user/email-login/email-login.component.html","./src/app/user/google-signin.directive.ts","./src/app/user/login-page/login-page.component.ts","./src/app/user/login-page/login-page.component.html","./src/app/user/user-routing.module.ts","./src/app/user/user.module.ts"],"names":[],"mappings":"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","file":"user-user-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-email-login',\n  templateUrl: './email-login.component.html',\n  styleUrls: ['./email-login.component.scss']\n})\nexport class EmailLoginComponent implements OnInit {\n  form: FormGroup;\n\n  type: 'login' | 'signup' | 'reset' = 'signup';\n  loading = false;\n\n  serverMessage: string;\n\n  constructor(private authAf: AngularFireAuth, private fb: FormBuilder, private auth: AuthService) {}\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: [\n        '',\n        [Validators.minLength(6), Validators.required]\n      ],\n      passwordConfirm: ['', []]\n    });\n  }\n\n  changeType(val) {\n    this.type = val;\n  }\n\n  get isLogin() {\n    return this.type === 'login';\n  }\n\n  get isSignup() {\n    return this.type === 'signup';\n  }\n\n  get isPasswordReset() {\n    return this.type === 'reset';\n  }\n\n  get email() {\n    return this.form.get('email');\n  }\n  get password() {\n    return this.form.get('password');\n  }\n\n  get passwordConfirm() {\n    return this.form.get('passwordConfirm');\n  }\n\n  get passwordDoesMatch() {\n    if (this.type !== 'signup') {\n      return true;\n    } else {\n      return this.password.value === this.passwordConfirm.value;\n    }\n  }\n\n  async onSubmit() {\n    this.loading = true;\n\n    const email = this.email.value;\n    const password = this.password.value;\n\n    try {\n      if (this.isLogin) {\n        await this.auth.signInWithEmailAndPassword(email, password);\n      }\n      if (this.isSignup) {\n        await this.auth.createUserWithEmailAndPassword(email, password);\n      }\n      if (this.isPasswordReset) {\n        await this.auth.sendPasswordResetEmail(email);\n        this.serverMessage = 'Check your email';\n      }\n    } catch (err) {\n      this.serverMessage = err;\n    }\n\n    this.loading = false;\n  }\n}\n","<mat-card>\n    <div *ngIf=\"isSignup\">\n        <h3>Create Account</h3>\n\n        <button mat-stroked-button (click)=\"changeType('login')\">\n      Returning user?\n    </button>\n    </div>\n\n    <div *ngIf=\"isLogin\">\n        <h3>Sign In</h3>\n        <button size=\"small\" mat-stroked-button (click)=\"changeType('signup')\">\n      New user?\n    </button>\n    </div>\n\n    <div *ngIf=\"isPasswordReset\">\n        <h3>Reset Password</h3>\n        <button size=\"small\" mat-button (click)=\"changeType('login')\">Back</button>\n    </div>\n\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n        <mat-form-field [color]=\"email.valid && 'accent'\">\n            <input matInput formControlName=\"email\" type=\"email\" placeholder=\"Email\" autocomplete=\"off\" />\n\n            <mat-error *ngIf=\"email.invalid && email.dirty\">\n                You must enter a valid email address\n            </mat-error>\n        </mat-form-field>\n\n        <mat-form-field [color]=\"email.valid && 'accent'\" *ngIf=\"!isPasswordReset\">\n            <input matInput formControlName=\"password\" type=\"password\" placeholder=\"Password\" autocomplete=\"off\" />\n\n            <mat-error *ngIf=\"password.invalid && password.dirty\">\n                Password must be at least 6 characters long\n            </mat-error>\n        </mat-form-field>\n\n        <mat-form-field [color]=\"passwordDoesMatch ? 'accent' : 'warn'\" *ngIf=\"isSignup\">\n            <input matInput formControlName=\"passwordConfirm\" type=\"password\" placeholder=\"Confirm password\" autocomplete=\"off\" />\n\n            <mat-error *ngIf=\"passwordConfirm.dirty && !passwordDoesMatch\">\n                Password does not match\n            </mat-error>\n        </mat-form-field>\n\n        <mat-error class=\"server-error\">{{ serverMessage }}</mat-error>\n\n        <button *ngIf=\"isPasswordReset\" mat-stroked-button type=\"submit\" [disabled]=\"loading\">\n      Send Reset Email\n    </button>\n\n        <button *ngIf=\"!isPasswordReset\" mat-raised-button color=\"accent\" type=\"submit\" [disabled]=\"form.invalid || !passwordDoesMatch || loading\">\n      Submit\n    </button>\n    </form>\n\n    <button mat-button *ngIf=\"isLogin && !isPasswordReset\" (click)=\"changeType('reset')\">\n    Forgot password?\n  </button>\n</mat-card>","import { Directive, HostListener } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport * as firebase from 'firebase/app';\n\n@Directive({\n  selector: '[appGoogleSignin]'\n})\nexport class GoogleSigninDirective {\n  constructor(private afAuth: AngularFireAuth) {}\n\n  @HostListener('click')\n  onclick() {\n    this.afAuth.signInWithPopup(new firebase.auth.GoogleAuthProvider());\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport {AuthService} from '../services/auth.service'\n\n\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent implements OnInit {\n\n  constructor(public afAuth: AngularFireAuth, public auth: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <h1>Base</h1>\n\n<p>\n    <a routerLink=\"/secret\">Secret</a>\n</p>\n\n<div *ngIf=\"auth.user$ | async as user; else login\">\n    <pre>\n    {{ user | json }}\n  </pre>\n\n    <hr>\n    <button class=\"button\" (click)=\"auth.signOut()\">Sign Out</button>\n\n</div>\n\n<ng-template #login>\n    <button class=\"button\" (click)=\"auth.googleSignin()\">Login with Google</button>\n</ng-template> -->\n<main>\n    <div *ngIf=\"!(auth.user$  | async)\">\n        <h1>Login</h1>\n\n        <button mat-raised-button (click)=\"auth.googleSignin()\">\n      <img src=\" /assets/google-logo.svg \" /> Login with Google\n    </button>\n\n        <h5>OR</h5>\n\n        <app-email-login></app-email-login>\n\n    </div>\n\n    <div *ngIf=\"auth.user$ | async as user \" class=\"logout \">\n        <p>\n            Logged in as <strong>{{ user.email }}</strong>\n        </p>\n\n        <button mat-stroked-button (click)=\"auth.signOut() \">Logout</button>\n    </div>\n</main>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {MaterialModule} from '../material/material.module'\nimport { LoginPageComponent } from './login-page/login-page.component';\n\n\nconst routes: Routes = [{path: '', component: LoginPageComponent}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes), MaterialModule],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { GoogleSigninDirective } from './google-signin.directive';\nimport { EmailLoginComponent } from './email-login/email-login.component';\nimport { MaterialModule } from '../material/material.module';\n\n\n@NgModule({\n  declarations: [LoginPageComponent, GoogleSigninDirective, EmailLoginComponent],\n  imports: [\n    CommonModule,\n    UserRoutingModule, MaterialModule,ReactiveFormsModule\n  ]\n})\nexport class UserModule { }\n"],"sourceRoot":"webpack:///"}